@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@section scripts {
    <script src="~/js/animation_min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <script src="~/js/animations.js?v=@Configuration["AppSettings:FilesVersion"]"></script>
    <script src="~/js/action.js?v=@Configuration["AppSettings:FilesVersion"]"></script>


    <style>
        #canvasContainer {
            position: relative;
            display: inline-block;
            height: 97vh;
        }
        /* Canvas styling */
        #myCanvas {
            background-color: #fff;
            cursor: pointer;
        }
        /* Hidden input for text editing added*/
        #textEditor {
            position: absolute;
            display: none;
            outline: none;
            background: linear-gradient(135deg, #ffffff, #f9f9f9);
            border: 1px solid #ddd;
            border-radius: 6px;
            padding: 6px 10px;
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            font-size: 16px;
            color: #333;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transition: box-shadow 0.3s ease, transform 0.3s ease;
           z-index: 100;
        }

            #textEditor:focus {
                box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
                transform: scale(1.02);
            }
    </style>

    <style>

        input[type="color" i] {
            width: 30px;
            height: 30px;
            padding: 0;
            /* border: none; */
            border-radius: 7px;
        }

        .color-swatch {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: 2px solid transparent;
            cursor: pointer;
            transition: transform 0.2s, border-color 0.2s;
        }

            .color-swatch:hover {
                transform: scale(1.1);
                border-color: #666;
            }

            .color-swatch.selected {
                border-color: #000;
                box-shadow: 0 0 5px rgba(0,0,0,0.3);
            }
        /* Custom context menu styling */
        #contextMenu {
            position: absolute;
            display: none;
            z-index: 1000;
            background-color: #fff;
            border: 1px solid #ccc;
            box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
            padding: 5px;
            border-radius: 4px;
        }

            #contextMenu ul {
                list-style: none;
                margin: 0;
                padding: 0;
            }

            #contextMenu li {
                padding: 5px 10px;
                cursor: pointer;
            }

                #contextMenu li:hover {
                    background-color: #eee;
                }

        .dropdown-toggle {
            text-decoration: none;
            color: #777b7c;
        }

        .dropdown-menu.show {
            background: #fff;
            border-radius: 1rem;
            border: 0px;
            height: auto !important;
            width: 240px;
            -webkit-box-shadow: 0px 0px 7px #c1bbbb;
            box-shadow: 0px 0px 7px #c1bbbb;
            overflow: hidden !important;
        }

        .dropdown {
            color: #000000 !important;
        }

            .dropdown:hover {
                color: #212529 !important;
            }

        .dropdown-item {
            color: #212529 !important;
        }

            .dropdown-item:hover {
                color: #fff !important;
                background-color: #4e43e1 !important;
            }



        /* gallery styles */

        :root {
            --font-mont: "Montserrat", sans-serif;
            --font-nunito: "Nunito Sans", sans-serif;
            --color-white: #fff;
            --color-blue: #4e43e1;
            --color-muted-grey: #777b7c;
            --color-border-grey: #00000036;
        }

        body {
            font-family: var(--font-nunito);
            margin: 0;
            padding: 0;
            font-size: 1rem;
        }

        .panel-left-gallery {
            width: 500px;
            height: 100vh;
            background: var(--color-white);
            /* z-index: 9; */
            padding: 25px 30px;
            position: absolute;
            left: 0px;
            top: 10px;
        }

        .tabs {
            display: flex;
            justify-content: space-between;
            width: 47%;
        }

        .tab {
            padding: 3px 7px;
            cursor: pointer;
            font-weight: 600;
            font-size: 14px;
            border: 1px solid transparent;
            border-radius: 3px !important;
        }

            .tab:hover {
                border: 1px solid #08080836;
                border-radius: 5px;
            }



        .cross:hover {
            color: red;
        }

        .tab.active {
            background: var(--color-blue);
            color: var(--color-white);
            border-radius: 3px;
        }

        .left_content {
            display: none;
        }

            .left_content.active {
                display: block;
            }

        .search-box {
            display: flex;
        }

            .search-box input {
                flex: 1;
                padding: 3px 5px;
            }

        .gallery {
            display: flex;
            flex-wrap: wrap;
            margin-top: 10px;
            min-height: 432px;
        }

        .my_img_gal {
            min-height: 430.7px;
        }

        .gallery img {
            width: 110px;
            height: 110px;
            object-fit: contain;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 24px;
        }

            .pagination span {
                margin: 0 9px;
                cursor: pointer;
                font-size: 14px;
                right-listone
            }

        .shapes_drop {
            text-decoration: none;
            color: var(--color-muted-grey);
        }

        .shapes_tabs a {
            font-size: 14px;
            text-decoration: none;
            color: black;
        }

        .left-panel-imput {
            flex: 1;
            padding: 5px;
            border-radius: 5px;
            border-color: #00000036;
        }

        .search-box,
        .choose_file {
            margin-top: 15px;
        }

        .file_upload {
            border-radius: 5px !important;
        }

        .temp_gallery {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
            overflow-y: hidden;
            min-height: 432px;
        }

            .temp_gallery img {
                width: auto;
                height: 147px;
            }

        .gallery_head {
            font-size: 18px;
            font-weight: 700;
        }

        .gallery_type {
            font-size: 15px;
        }
        /* file upload css */
        .custom-file-input {
            display: flex;
            align-items: center;
            opacity: unset !important;
            border-radius: 5px;
            overflow: hidden;
            border: 2px solid #00000036 !important;
            font-family: Arial, sans-serif;
        }

            .custom-file-input label {
                background-color: #e6f4ea;
                padding: 5px;
                cursor: pointer;
                font-size: 14px;
                font-weight: bold;
                color: #333;
                margin-bottom: 0 !important;
            }

            .custom-file-input span {
                flex: 1;
                padding: 5px;
                font-size: 14px;
                color: #888;
                background-color: #f9f9f9;
            }

            .custom-file-input input {
                display: none;
            }
        /* background image upload */
        #background_popup {
            display: none;
            width: 254px;
            height: 100%;
            background-color: #fff;
            padding: 20px;
            position: absolute;
            top: 3px;
            left: 0;
        }

        #close_button {
            border: 0px solid #ddd;
            float: right;
            background: transparent;
            font-weight: bold;
            font-size: 15px;
            border-radius: 3px;
            padding-top: 2.3px;
        }

        .back_label {
            font-size: 15px;
        }

        .background_edit {
            font-family: "Nunito Sans", sans-serif;
            font-size: 15px;
        }

        .texture_img {
            width: 75px;
            height: 75px;
        }

        .texture_images {
            min-height: 469px;
        }

        .texture_palette {
            width: 30px;
            height: 30px;
            padding: 0;
            border: 2px solid #000000 !important;
            border-radius: 7px;
            overflow: hidden;
        }

            .texture_palette img {
                width: 30px;
                height: 30px;
            }

        #texture_box {
            display: block;
        }



        /* play modal */

        .play_modal_body .modal-content {
            border-radius: 10px;
            width: 411px !important;
            height: 704px !important;
            transform: translate(295px, -180px);
        }

        .play_modal_body .modal-body img {
            width: 100%;
        }

        .modal-open .modal {
            overflow-y: hidden !important;
        }

        .play_modal_body .modal.show .modal-dialog {
            max-width: 1000px !important;
        }

        .play_modal_btn {
            position: absolute;
            top: -16px;
            right: -16px;
            background-color: #ff0000 !important;
            opacity: 1 !important;
            border-radius: 100% !important;
            padding: 7px !important;
            color: #fff !important;
        }

        .menuboard-vertical-thum .active {
            border: 2px solid #0000ff80;
        }

        .miniCanvas {
            border-radius: 5px;
            width: 40px;
            height: 40px;
        }

            .miniCanvas:hover {
                border: 2px solid #ccc;
            }


        .miniCanvas_active {
            border: 2px solid #ccc;
        }
        /* all time deropdown */
        .time_dropdown {
            font-size: 13.8px !important;
            font-weight: 500 !important;
        }
        /* canvas size */
        .vertical_canvas{
            width: 32%;
            aspect-ratio: 9/16;
        }

        .inside_wrapper{
            height: fit-content !important;
        }
    </style>
    <script>
            $(document).ready(function(){
               CreateHeaderSectionhtml();
               CreateBackgroundSectionhtml();
               CreateLeftSectionhtml();
               CreateRightSectionhtml()
              
                 $("#hdnlLoopControl").val(1);
                 $("#hdnfillColor").val('#42b3f5');
                 $("#hdnStrockColor").val('#78f542');
                 let button = document.getElementById("modeButton");
                   button.innerText = "Graphic Mode";

                        // Function to get URL parameter
                        function getUrlParameter(name) {
                            const urlParams = new URLSearchParams(window.location.search);
                            return urlParams.get(name);
                        }

                        // Get the ID from URL
                        const id = getUrlParameter('id');

                        // Check if parameter exists
                        if(id) {
                            // Call your initialization function with the ID
                            GetDesignBoardById(id);

                                 const canvas      = document.getElementById("myCanvas");
                                  const contextMenu = document.getElementById("contextMenu");

                                  canvas.addEventListener("contextmenu", function(e) {
                                    e.preventDefault(); // Prevent default browser context menu

                                    const rect    = canvas.getBoundingClientRect();
                                    const offsetX = e.clientX - rect.left;
                                    const offsetY = e.clientY - rect.top;

                                    // adjust these as needed to get the menu exactly where you want
                                    const adjustX = 280;
                                    const adjustY = 64;

                                    const found = getObjectAtcontextmenu(offsetX, offsetY);
                                    if (found) {
                                      selectedForContextMenu = found.obj;
                                      selectedType           = found.type;

                                      // position & show your custom menu
                                      contextMenu.style.left    = (offsetX + adjustX) + "px";
                                      contextMenu.style.top     = (offsetY + adjustY) + "px";
                                      contextMenu.style.display = "block";
                                    } else {
                                      contextMenu.style.display = "none";
                                    }
                                  });
                        }

         const params = new URLSearchParams(window.location.search);
        if (params.get('openModal') === 'true') {
          // Bootstrap 5 way:
          const modalEl = document.getElementById('exampleModal');
          const bsModal = new bootstrap.Modal(modalEl);
          bsModal.show();
        }
        });
    </script>



    <link href="https://fonts.googleapis.com/css2?family=Lobster&family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
          rel="stylesheet">
    <link href="~/css/animate/animate.min.css" rel="stylesheet">
    <link href="~/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link href="~/css/style.css" rel="stylesheet">
    <link href="~/css/canvas.css" rel="stylesheet">
    <link href="~/css/responsive.css" rel="stylesheet">
    <script src='https://code.jquery.com/jquery-3.2.1.slim.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js'></script>
    <script src="~/js/wow.min.js"></script>

    <script>
        function opengl()
         {
          document.getElementById("modeButton").innerText = "Graphic Mode";
          $("#opengl_popup").toggle();
          if(document.getElementById("fontstyle_popup").style.display == "block"){
                $("#fontstyle_popup").hide();
                $(".right-sec-two").toggle();
                $(".right-sec-one").toggle();
            }
         }
    </script>

    <script>
            function toggleMode() {
            let button = document.getElementById("modeButton");

            // Toggle visibility of elements
            if (document.getElementById("opengl_popup").style.display == "block") {
                $("#opengl_popup").hide();
            }
            $("#fontstyle_popup").toggle();
            $(".right-sec-two").toggle();
            $(".right-sec-one").toggle();

            // Toggle button text between "Animation Mode" and "Graphic Mode"
            if (button.innerText === "Animation Mode") {
                button.innerText = "Graphic Mode";
            } else {
                button.innerText = "Animation Mode";
            }
        }
        function opentl()
         {
             document.getElementById("modeButton").innerText = "Animation Mode";
            if(document.getElementById("opengl_popup").style.display == "block"){
                $("#opengl_popup").hide();
            }
          $("#fontstyle_popup").toggle();
          $(".right-sec-two").toggle();
          $(".right-sec-one").toggle();
         }
          function opentlClose()
         {
             document.getElementById("modeButton").innerText = "Graphic Mode";
            if(document.getElementById("opengl_popup").style.display == "block"){
                $("#opengl_popup").hide();
            }
          $("#fontstyle_popup").toggle();
          $(".right-sec-two").toggle();
          $(".right-sec-one").toggle();
         }
         

         // tab open
                function switchTab(tabElement, tabName) {
            console.log("Arghadeep");  // Debugging log

            let tabs = document.querySelectorAll(".tab");
            let contents = document.querySelectorAll(".left_content");

            // Remove active class from all tabs
            tabs.forEach((tab) => tab.classList.remove("active"));

            // Add active class to clicked tab
            tabElement.classList.add("active");

            // Hide all content sections
            contents.forEach((content) => content.classList.remove("active"));

            // Show the selected tab's content
            document.getElementById(tabName).classList.add("active");
        }
        // file upload js
        function updateFileName() {
            const fileInput = document.getElementById('fileUpload');
            const fileName = document.getElementById('fileName');

            if (fileInput.files.length > 0) {
                fileName.textContent = fileInput.files[0].name;
            } else {
                fileName.textContent = 'No File';
            }
        }

        
                // show the popup when the pattern icon is clicked
        $(document).on('click', '#toggle_img', function(e) {
          e.preventDefault();
          CreateBackgroundSectionhtml();
          $('#background_popup').show();
        });

        // hide the popup when the close button is clicked
        $(document).on('click', '#close_button', function(e) {
          e.preventDefault();
          $('#background_popup').hide();
        });

        // texture popuo show
        document.querySelectorAll(".texture_palette").forEach(element => {
            element.addEventListener("click", function() {
                let box = document.getElementById("texture_box");
                box.style.display = (box.style.display === "none" || box.style.display === "") ? "block" : "none";
            });
        });

    </script>

    <!-- JavaScript for Handling Selection and Redirection -->
    <script>
        let selectedOption = ""; // Variable to store the selected board type

        document.getElementById("horizontal-option").addEventListener("click", function () {
            selectedOption = "horizontal";
            highlightSelection("horizontal-option");
        });

        document.getElementById("vertical-option").addEventListener("click", function () {
            selectedOption = "vertical";
            highlightSelection("vertical-option");
        });

        document.getElementById("create-button").addEventListener("click", function () {
            if (selectedOption === "horizontal") {
                window.location.href = "/Canvas/HorizontalIndex"; // Redirect to horizontal page
            } else if (selectedOption === "vertical") {
                window.location.href = "/Canvas/VerticalIndex"; // Redirect to vertical page
            } else {
                alert("Please select an option before proceeding!");
            }
        });

        // Function to highlight selected option
        function highlightSelection(selectedId) {
            document.getElementById("horizontal-option").classList.remove("selected");
            document.getElementById("vertical-option").classList.remove("selected");
            document.getElementById(selectedId).classList.add("selected");
        }

        document.addEventListener('DOMContentLoaded', function () {
          document.querySelectorAll('.panel-vertical-scroll .menuboard-vertical-thum')
            .forEach(item => {
              item.addEventListener('click', function () {
                this.classList.toggle('active');
              });
            });
        });


        const elements = document.querySelectorAll('.miniCanvas');

        elements.forEach(element => {
          element.addEventListener('click', () => {
            // Remove 'active' class from all elements
            elements.forEach(el => el.classList.remove('miniCanvas_active'));

            // Add 'active' to the clicked element
            element.classList.add('miniCanvas_active');
          });
        });
    </script>

    <script>
    (function(){
      const canvas    = document.getElementById('myCanvas');
      const container = document.getElementById('canvasContainer');
      const ctx       = canvas.getContext('2d');
      const dpr       = window.devicePixelRatio || 1;

      // change these to taste:
      const widthPct     = 0.32;   // 32% of container width
      const aspectW      = 9;      // aspect-ratio numerator
      const aspectH      = 16;     // aspect-ratio denominator

      function resizeCanvas() {
        // 1) compute CSS display width & height
        const containerW      = container.clientWidth;
        const cssWidth        = containerW * widthPct;
        const cssHeight       = cssWidth * (aspectH / aspectW);

        // 2) apply to the canvas style
        canvas.style.width   = `${cssWidth}px`;
        canvas.style.height  = `${cssHeight}px`;

        // 3) size the drawing buffer for HiDPI
        const bufW = Math.round(cssWidth  * dpr);
        const bufH = Math.round(cssHeight * dpr);
        if (canvas.width !== bufW || canvas.height !== bufH) {
          canvas.width  = bufW;
          canvas.height = bufH;
        }

        // 4) make 1 unit === 1 CSS-pixel
        ctx.resetTransform();
        ctx.scale(dpr, dpr);
        
      }
      window.resizeCanvas = resizeCanvas;
      window.addEventListener('resize', resizeCanvas);
      window.addEventListener('DOMContentLoaded', resizeCanvas);
     
    })();
    </script>

}


<div class="text-center" style="position:relative">
    <nav class="navbar bg-dark-topnav navbar-expand-lg fixed-top">
        <div class="container-fluid p-r-0" style="justify-content: center !important;">
            <div class="row" id="divHeaderSection">
            </div>
        </div>
    </nav>

    <!-- Modal for preview board design-->
    <div class="play_modal_body" style="display:none;">
        <div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true" >
            <div class="modal-dialog">
                <div class="modal-content">

                    <button type="button" class="btn-close play_modal_btn" data-bs-dismiss="modal" aria-label="Close"></button>
                    <input type="hidden" id="hdnBackgroundSpecificColor" />
                    <div class="modal-body">
                        <canvas id="myCanvasElement"
                                class="clsmyCanvas"
                                width="340"
                                height="670"
                                style="background: lightgray; display: block; width: 340px; height: 670px; position: relative;">
                        </canvas>

                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- Modal for preview board design will be visible false-->
    <div class="play_modal_body" style="display:none;">
        <div id="downloadModal" tabindex="-1" aria-hidden="true">
            <div>
                <div class="modal-content">

                    <button type="button" class="btn-close play_modal_btn" data-bs-dismiss="modal" aria-label="Close"></button>

                    <div class="modal-body">
                        @* <img src="~/images/banner.png" alt="Placeholder Image"> *@
                        <canvas id="myCanvasElementDownload" class="clsmyCanvas" width="350" height="670" style="background: lightgray; position: relative;"></canvas>
                    </div>

                </div>
            </div>
        </div>
    </div>


    <!-- Modal Structure -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content p-3">
                <div class="modal-header">
                    <h5 class="modal-title" id="aniBoardModalLabel">New AniBoard</h5>
                </div>

                <div class="modal-body">
                    <!-- Horizontal Option -->
                    <div class="option-box d-flex justify-content-between align-items-center" id="horizontal-option">
                        <div class="d-flex align-items-center">
                            <div class="landscape-icon"></div>
                            <span>Horizontal / Landscape</span>
                        </div>
                        <span>1920x1080</span>
                    </div>

                    <!-- Vertical Option -->
                    <div class="option-box d-flex justify-content-between align-items-center mb-0" id="vertical-option">
                        <div class="d-flex align-items-center">
                            <div class="portrait-icon"></div>
                            <span class="vertical_option">Vertical / Portrait</span>
                        </div>
                        <span>1080x1920</span>
                    </div>
                </div>

                <div class="modal-footer pt-0">
                    <button class="create-btn" id="create-button">Create</button>
                </div>
            </div>
        </div>
    </div>



    <div class="d-flex align-items-stretch  main-canvas-content">

        <div class="panel-left " id="divpanelleft">
        </div>

        <div class="panel-middle d-flex align-items-center justify-content-center" id="canvasContainer">
                
                    <div class="canvas-top-btn">
                        <button id="modeButton" class="Graphic-More active" onclick="toggleMode();"></button>
                    </div>
                    <canvas id="myCanvas" class="clsmyCanvas"></canvas>
                            <!-- Custom context menu for deletion -->
                            <div id="contextMenu">
                                <ul>
                                    <li id="deleteOption">Delete</li>
                                </ul>
                            </div>
                    <p class="middle-resulation">1080x1920</p>
                    <textarea wrap="hard" style="display:none;" id="textEditor"></textarea>
        </div>

        <div class="panel-right content" id="divpanelright">
        </div>
    </div>

</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>