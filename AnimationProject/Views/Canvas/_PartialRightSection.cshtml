@{
    Layout = null;
}
@* <script>
        const arrowImage = new Image();
    arrowImage.src = "/images/icons/right arrow(thin).svg";

    function getEase() {
        return animationMode === "bounce" ? "bounce.out" : "linear";
    }

    function drawArrow(ctx, x, centerY) {
        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
        ctx.save();
        ctx.translate(x, centerY);
        const type = document.getElementById("hdnTextAnimationType").value;
        if (type === "zoom") {
            ctx.drawImage(arrowImage, -25, -25, 50, 50);
        } else if (type === "blur") {
            ctx.filter = "blur(4px)";
            ctx.drawImage(arrowImage, -20, -20, 40, 40);
            ctx.filter = "none";
        } else {
            ctx.drawImage(arrowImage, -20, -20, 40, 40);
        }
        ctx.restore();
    }

    // grab elements & context
    const miniCanvasAleft = document.getElementById('miniCanvas_aleft');
    const ctxAleft = miniCanvasAleft.getContext('2d');
    const centerX_left = miniCanvasAleft.width / 2;
    const centerY_left = miniCanvasAleft.height / 2;

    // draw the arrow at center immediately
    drawArrow(ctxAleft, centerX_left, centerY_left);

    // animate on hover
    miniCanvasAleft.addEventListener('mouseenter', () => {
        drawArrow(ctxAleft, 0, centerY_left);
        gsap.to({ pos: 0 }, {
            duration: 0.5,
            pos: centerX_left,
            ease: getEase(),
            onUpdate() {
                drawArrow(ctxAleft, this.targets()[0].pos, centerY_left);
            }
        });
    });

    miniCanvasAleft.addEventListener('mouseleave', () => {
        gsap.to({ pos: centerX_left }, {
            duration: 0.5,
            pos: centerX_left,
            ease: getEase(),
            onUpdate() {
                drawArrow(ctxAleft, this.targets()[0].pos, centerY_left);
            }
        });
    });

    // --------------------------------------------------------------------
    // 2. Right-to-Center (Canvas id: "miniCanvas_aright")
    const miniCanvasAright = document.getElementById('miniCanvas_aright');
    const ctxAright = miniCanvasAright.getContext('2d');
    const centerX_right = miniCanvasAright.width / 2;
    const centerY_right = miniCanvasAright.height / 2;

    // Helper to draw & rotate the arrow so it points left
    function drawArrowFromRight(x) {
        ctxAright.clearRect(0, 0, miniCanvasAright.width, miniCanvasAright.height);
        ctxAright.save();
        ctxAright.translate(x, centerY_right);
        ctxAright.rotate(Math.PI);  // flip 180°
        const type = document.getElementById("hdnTextAnimationType").value;
        if (type === "zoom") {
            ctxAright.drawImage(arrowImage, -25, -25, 50, 50);
        } else if (type === "blur") {
            ctxAright.filter = "blur(4px)";
            ctxAright.drawImage(arrowImage, -20, -20, 40, 40);
            ctxAright.filter = "none";
        } else {
            ctxAright.drawImage(arrowImage, -20, -20, 40, 40);
        }
        ctxAright.restore();
    }

    // draw arrow centered by default
    drawArrowFromRight(centerX_right);

    // animate on hover
    miniCanvasAright.addEventListener('mouseenter', () => {
        // start off-screen at right edge
        drawArrowFromRight(miniCanvasAright.width);
        gsap.to({ pos: miniCanvasAright.width }, {
            duration: 0.5,
            pos: centerX_right,
            ease: getEase(),
            onUpdate() {
                drawArrowFromRight(this.targets()[0].pos);
            }
        });
    });

    miniCanvasAright.addEventListener('mouseleave', () => {
        // smoothly “reset” to center (or just remain)
        gsap.to({ pos: centerX_right }, {
            duration: 0.5,
            pos: centerX_right,
            ease: getEase(),
            onUpdate() {
                drawArrowFromRight(this.targets()[0].pos);
            }
        });
    });


    // --------------------------------------------------------------------
    // 3. Bottom-to-Center (Canvas id: "miniCanvas_abottom")
    const miniCanvasAbottom = document.getElementById('miniCanvas_abottom');
    const ctxAbottom = miniCanvasAbottom.getContext('2d');
    const centerX_bottom = miniCanvasAbottom.width / 2;
    const centerY_bottom = miniCanvasAbottom.height / 2;

    // Draw & rotate the arrow so it points up
    function drawArrowFromBottom(y) {
        ctxAbottom.clearRect(0, 0, miniCanvasAbottom.width, miniCanvasAbottom.height);
        ctxAbottom.save();
        ctxAbottom.translate(centerX_bottom, y);
        ctxAbottom.rotate(-Math.PI / 2);  // rotate -90°
        const type = document.getElementById("hdnTextAnimationType").value;
        if (type === "zoom") {
            ctxAbottom.drawImage(arrowImage, -25, -25, 50, 50);
        } else if (type === "blur") {
            ctxAbottom.filter = "blur(4px)";
            ctxAbottom.drawImage(arrowImage, -20, -20, 40, 40);
            ctxAbottom.filter = "none";
        } else {
            ctxAbottom.drawImage(arrowImage, -20, -20, 40, 40);
        }
        ctxAbottom.restore();
    }

    // Draw arrow at center on load
    drawArrowFromBottom(centerY_bottom);

    // Animate on hover
    miniCanvasAbottom.addEventListener('mouseenter', () => {
        // start off-screen at bottom edge
        drawArrowFromBottom(miniCanvasAbottom.height);
        gsap.to({ pos: miniCanvasAbottom.height }, {
            duration: 0.5,
            pos: centerY_bottom,
            ease: getEase(),
            onUpdate() {
                drawArrowFromBottom(this.targets()[0].pos);
            }
        });
    });

    miniCanvasAbottom.addEventListener('mouseleave', () => {
        // smoothly reset to center
        gsap.to({ pos: centerY_bottom }, {
            duration: 0.5,
            pos: centerY_bottom,
            ease: getEase(),
            onUpdate() {
                drawArrowFromBottom(this.targets()[0].pos);
            }
        });
    });


    // --------------------------------------------------------------------
    // 4. Top-to-Center (Canvas id: "miniCanvas_atop")
    const miniCanvasAtop = document.getElementById('miniCanvas_atop');
    const ctxAtop = miniCanvasAtop.getContext('2d');
    const centerX_top = miniCanvasAtop.width / 2;
    const centerY_top = miniCanvasAtop.height / 2;

    // Draw & rotate the arrow so it points down
    function drawArrowFromTop(y) {
        ctxAtop.clearRect(0, 0, miniCanvasAtop.width, miniCanvasAtop.height);
        ctxAtop.save();
        ctxAtop.translate(centerX_top, y);
        ctxAtop.rotate(Math.PI / 2);  // rotate 90°
        const type = document.getElementById("hdnTextAnimationType").value;
        if (type === "zoom") {
            ctxAtop.drawImage(arrowImage, -25, -25, 50, 50);
        } else if (type === "blur") {
            ctxAtop.filter = "blur(4px)";
            ctxAtop.drawImage(arrowImage, -20, -20, 40, 40);
            ctxAtop.filter = "none";
        } else {
            ctxAtop.drawImage(arrowImage, -20, -20, 40, 40);
        }
        ctxAtop.restore();
    }

    // Draw arrow at center on load
    drawArrowFromTop(centerY_top);

    // Animate on hover
    miniCanvasAtop.addEventListener('mouseenter', () => {
        // start off-screen at top edge (y=0)
        drawArrowFromTop(0);
        gsap.to({ pos: 0 }, {
            duration: 0.5,
            pos: centerY_top,
            ease: getEase(),
            onUpdate() {
                drawArrowFromTop(this.targets()[0].pos);
            }
        });
    });

    miniCanvasAtop.addEventListener('mouseleave', () => {
        // smoothly reset to center
        gsap.to({ pos: centerY_top }, {
            duration: 0.5,
            pos: centerY_top,
            ease: getEase(),
            onUpdate() {
                drawArrowFromTop(this.targets()[0].pos);
            }
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
      const dpr = window.devicePixelRatio || 1;

      // Cache your canvases & centers
      const miniCanvasAtop    = document.getElementById('miniCanvasAtop');
      const miniCanvasAleft   = document.getElementById('miniCanvasAleft');
      const miniCanvasAright  = document.getElementById('miniCanvasAright');
      const miniCanvasAbottom = document.getElementById('miniCanvasAbottom');

      // Top
      miniCanvasAtop.addEventListener('mouseleave', () => {
        gsap.to({ pos: centerY_top }, {
          duration: 0.5,
          pos: centerY_top,
          ease: getEase(),
          onUpdate() {
            drawArrowFromTop(this.targets()[0].pos);
          }
        });
      });

      // Left
      miniCanvasAleft.addEventListener('mouseleave', () => {
        gsap.to({ pos: centerX_left }, {
          duration: 0.5,
          pos: centerX_left,
          ease: getEase(),
          onUpdate() {
            drawArrow(ctxAleft, this.targets()[0].pos, centerY_left);
          }
        });
      });

      // Right
      miniCanvasAright.addEventListener('mouseleave', () => {
        gsap.to({ pos: centerX_right }, {
          duration: 0.5,
          pos: centerX_right,
          ease: getEase(),
          onUpdate() {
            drawArrowFromRight(this.targets()[0].pos);
          }
        });
      });

      // Bottom
      miniCanvasAbottom.addEventListener('mouseleave', () => {
        gsap.to({ pos: centerY_bottom }, {
          duration: 0.5,
          pos: centerY_bottom,
          ease: getEase(),
          onUpdate() {
            drawArrowFromBottom(this.targets()[0].pos);
          }
        });
      });
    });
</script> *@
<script>
    $(document).ready(function(){
    TabShowHide('In');
    });
</script>
<script>
       const rotationSlider    = document.getElementById('rotationSlider');
    const rotationValueSpan = document.getElementById('rotationValue');
    const rotationBadge     = document.getElementById('rotationBadge');

    // Helper: clamp a number between 0 and 360
    function clampAngle(v) {
      let n = parseInt(v, 10);
      if (isNaN(n)) n = 0;
      return Math.min(Math.max(n, 0), 360);
    }

    // 1) Slider → Badge & selected objects
    rotationSlider.addEventListener('input', () => {
      
      const angle = clampAngle(rotationSlider.value);
      rotationValueSpan.textContent = angle+ '°';;
      rotationBadge.textContent = angle ;

      [...textObjects, ...images].forEach(obj => {
        if (obj.selected) obj.rotation = angle;
      });
      drawCanvas('Common');
    });

        // Allow only digits, backspace, etc.
    rotationBadge.addEventListener('keydown', (e) => {
      const isAllowedKey =
        /[0-9]/.test(e.key) ||
        ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'].includes(e.key);

      if (!isAllowedKey) {
        e.preventDefault();
        return;
      }

      // Special case: if it's only one digit and user presses backspace, reset to 0°
      const text = rotationBadge.innerText.replace(/[^\d]/g, '');
      if (e.key === 'Backspace' && text.length === 1) {
        e.preventDefault();
        rotationBadge.innerText = '0';
        updateRotation(0);
        moveCaretToEnd(rotationBadge);
      }
    });

    // Handle changes after editing
    rotationBadge.addEventListener('input', () => {
      let raw = rotationBadge.innerText.replace(/[^\d]/g, '');
      if (raw === '') {
        rotationBadge.innerText = '0';
        updateRotation(0);
      } else {
        let angle = Math.min(360, Math.max(0, parseInt(raw)));
        rotationBadge.innerText = angle;
        updateRotation(angle);
      }
      moveCaretToEnd(rotationBadge);
    });

    // Utility to move caret to end
    function moveCaretToEnd(el) {
      const range = document.createRange();
      const sel = window.getSelection();
      range.selectNodeContents(el);
      range.collapse(false);
      sel.removeAllRanges();
      sel.addRange(range);
    }

    // Sync rotation to slider, display, and objects
    function updateRotation(angle) {
      if (rotationSlider) rotationSlider.value = angle;
      if (rotationValueSpan) rotationValueSpan.textContent = angle+ '°';;

      [...textObjects, ...images].forEach(obj => {
        if (obj.selected) obj.rotation = angle;
      });

      drawCanvas?.('Common');
    }
    // function for horizontal scroll in templates
    function scrollCategories(offset) {
      const container = document.getElementById("categoryScroll");
      container.scrollBy({ left: offset, behavior: 'smooth' });
    }

    function hideElemennts() {
      document.getElementById("elementsPopup").style.display = "none";
    }

    //active class for animation direction

        function toggleDirectionActive(clickedElement) {
      // Remove 'active_direction' from all elements
      document.querySelectorAll('.direction_link').forEach(el => {
        el.classList.remove('active_direction');
      });

      // Add 'active_direction' to the clicked element
      clickedElement.classList.add('active_direction');
    }

</script>


<style>
    .form-range {
        width: 240px;
    }
</style>
<style>
    /* remove default appearance */
    #rotationSlider {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        width: 100%;
        background: transparent; /* track styled via pseudo-elements */
    }

        /* Track styling */
        #rotationSlider::-webkit-slider-runnable-track { /* WebKit */
            height: 0.5rem;
            background: #e9ecef;
            border-radius: 0.25rem;
        }

        #rotationSlider::-moz-range-track { /* Firefox */
            height: 0.5rem;
            background: #e9ecef;
            border-radius: 0.25rem;
        }

        #rotationSlider::-ms-track { /* IE/Edge */
            height: 0.5rem;
            background: transparent;
            border-color: transparent;
            color: transparent;
        }

        #rotationSlider::-ms-fill-lower {
            background: #e9ecef;
            border-radius: 0.25rem;
        }

        #rotationSlider::-ms-fill-upper {
            background: #e9ecef;
            border-radius: 0.25rem;
        }

    /* Fill portion (all engines) */
    #rotationSlider {
        background-image: linear-gradient(#0d6efd, #0d6efd);
        background-size: 0% 100%;
        background-repeat: no-repeat;
    }

        /* Thumb styling */
        #rotationSlider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 1rem;
            height: 1rem;
            background: #4e43e1; 
            border: 2px solid #fff;
            border-radius: 50%;
            cursor: pointer;
        }

        #rotationSlider::-moz-range-thumb {
            width: 1rem;
            height: 1rem;
            background: #4e43e1;
            border: 2px solid #fff;
            border-radius: 50%;
            cursor: pointer;
        }

        #rotationSlider::-ms-thumb {
            width: 1rem;
            height: 1rem;
            background: #4e43e1;
            border: 2px solid #fff;
            border-radius: 50%;
            cursor: pointer;
        }



    #opacitySlider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 1rem;
            height: 1rem;
            background: #4e43e1;
            border: 2px solid #fff;
            border-radius: 50%;
            cursor: pointer;
    }

    #opacitySlider::-moz-range-thumb {
            width: 1rem;
            height: 1rem;
            background: #4e43e1;
            border: 2px solid #fff;
            border-radius: 50%;
            cursor: pointer;
    }

    #opacitySlider::-ms-thumb {
            width: 1rem;
            height: 1rem;
            background: #4e43e1;
            border: 2px solid #fff;
            border-radius: 50%;
            cursor: pointer;
    }
    /* Optional: make the editable span look a bit nicer when focused */
    #rotationBadge[contenteditable] {
        padding: 0.15rem 0.5rem;
        border-radius: 0.25rem;
        outline: none;
        background-color: #4e43e1;
    }

    #opacityBadge {
        padding: 0.15rem 0.5rem;
        border-radius: 0.25rem;
        outline: none;
        background-color: #4e43e1;
    }

        #rotationBadge[contenteditable]:focus {
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
            background-color: #4e43e1;
        }

        #opacityBadge[contenteditable]:focus {
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
            background-color: #4e43e1;
        }
</style>

<div class="right-sec-one">
    <div class="headtext">Board Animation</div>
    <div class="tabset">
        <input type="hidden" id="hdnTabType" />
        <!-- Tab 1 -->
        <input type="radio" name="tabset" id="tab1" onclick="TabShowHide('In')" aria-controls="marzen" checked>
        <label style="margin-left:0px;" for="tab1">In</label>
        <!-- Tab 2 -->
        <input type="radio" name="tabset" id="tab2" onclick="TabShowHide('Stay')" aria-controls="rauchbier">
        <label for="tab2">Stay</label>
        <!-- Tab 3 -->
        <input type="radio" name="tabset" id="tab3" onclick="TabShowHide('Out')" aria-controls="dunkles">
        <label style="margin-right:0px;" for="tab3">Out</label>

        <div class="tab-panels">

            <section id="marzen" class="tab-panel">
                <div class="accordion" style=" position: relative;   left: 0px; top: 0; margin-bottom: 26px; width: 100%; ">
                    <div class="dropdown mb-4">
                        <a class="dropdown-toggle time_dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Speed
                        </a> <label id="lblSpeed"></label>
                        <ul class="dropdown-menu" id="ddlSpeedControl">
                            <li><a class="dropdown-item" value="2" onclick="wireSpeedDropdown()">2 Sec</a></li>
                            <li><a class="dropdown-item" value="3" onclick="wireSpeedDropdown()">3 Sec</a></li>
                            <li><a class="dropdown-item" value="4" onclick="wireSpeedDropdown()">4 Sec</a></li>
                            <li><a class="dropdown-item" value="6" onclick="wireSpeedDropdown()">6 Sec</a></li>
                            <li><a class="dropdown-item" value="8" onclick="wireSpeedDropdown()">8 Sec</a></li>
                            <li><a class="dropdown-item" value="10" onclick="wireSpeedDropdown()">10 Sec</a></li>
                        </ul>
                    </div>
                    <div class="dropdown mb-4" style="display:none;">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                            Loop
                        </a> <label id="lblLoop"></label><input type="hidden" id="hdnlLoopControl" value="1" />
                        <ul class="dropdown-menu" id="ddlLoopControl">
                            <li><a class="dropdown-item" value="1">1 time</a></li>
                            <li><a class="dropdown-item" value="2">2 time</a></li>
                            <li><a class="dropdown-item" value="3">3 time</a></li>
                            <li><a class="dropdown-item" value="4">4 time</a></li>
                            <li><a class="dropdown-item" value="5">5 time</a></li>
                            <li><a class="dropdown-item" value="6">6 time</a></li>
                        </ul>
                    </div>
                    <h2>Effects</h2>
                    <ul class="right-listone d-flex flex-wrap gap-3 mb-4" id="ulEffects">
                        <li style="display:none;">
                            <a  id="alinear" href="javascript:void(0)" onclick="textAnimationClick(this, 'linear','In')" title="Linear">Linear2</a>
                            <div class="clear"></div>
                        </li>

                        <li style="display:none;">
                            <a id="abounce" href="javascript:void(0)" onclick="textAnimationClick(this, 'bounce','In')" title="Bounce">Bounce</a>
                            <div class="clear"></div>
                        </li>
                        <li>
                            <a id="adelaylinear" href="javascript:void(0)" onclick="textAnimationClick(this, 'delaylinear','In')" title="linear">Linear</a>
                            <div class="clear"></div>
                        </li>
                        <li style="display:none;">
                            <a id="azoomInOut" href="javascript:void(0)" onclick="textAnimationClick(this, 'zoom','In')" title="Zoom">Zoom</a>
                            <div class="clear"></div>
                        </li>
                        <li title="Effect Disabled (Coming Soon)">
                            <a class="disabled-ani-button" id="ablur" href="javascript:void(0)" title="Zoom in">Zoom</a>
                            <div class="clear"></div>
                        </li>
                        <li title="Effect Disabled (Coming Soon)">
                            <a class="disabled-ani-button" id="ablur" href="javascript:void(0)" title="Cross Fade">Fade</a>
                            <div class="clear"></div>
                        </li>
                        <li title="Effect Disabled (Coming Soon)">
                            <a class="disabled-ani-button" id="ablur" href="javascript:void(0)" title="Type">Type</a>
                            <div class="clear"></div>
                        </li>
                        <li title="Effect Disabled (Coming Soon)">
                            <a class="disabled-ani-button" id="ablur" href="javascript:void(0)">Blur</a>
                            <div class="clear"></div>
                        </li>

                    </ul>
                    <input type="hidden" id="hdnTextAnimationType" />
                    <input type="hidden" id="hdnslideDedirection" />
                    <input type="hidden" id="hdnEffectSlide1" />
                    <input type="hidden" id="hdnEffectSlide2" />
                    <input type="hidden" id="hdnEffectSlide3" />

                    <input type="hidden" id="hdnOutEffectSlide1" />
                    <input type="hidden" id="hdnOutEffectSlide2" />
                    <input type="hidden" id="hdnOutEffectSlide3" />

                    <input type="hidden" id="hdnDirectiontSlide1" />
                    <input type="hidden" id="hdnDirectiontSlide2" />
                    <input type="hidden" id="hdnDirectiontSlide3" />

                    <input type="hidden" id="hdnOutDirectiontSlide1" />
                    <input type="hidden" id="hdnOutDirectiontSlide2" />
                    <input type="hidden" id="hdnOutDirectiontSlide3" />
                    <h2>In</h2>
                    <ul class="right-listone d-flex justify-content-between align-items-center" id="uldirection">
                        <li>
                            <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                                <!-- hide the <a> by default -->
                                <a class="direction_link" id="aleft" href="javascript:void(0)" onclick="setCoordinate(this,'left',100,20,50,50,'In'); toggleDirectionActive(this);"
                                   style=" width:100%; height:100%;">
                                    <img src="/images/icons/right arrow.svg" alt="Left to Center">
                                </a>
                                @* <!-- show the canvas by default -->
                                <canvas onclick="setCoordinate(this,'left',100,20,50,50)"
                                        id="miniCanvas_aleft" class="miniCanvas"
                                        width="50" height="50"
                                        style="display: block;"></canvas> *@
                            </div>
                            <div class="clear"></div>
                        </li>
                        <li>
                            <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                                <!-- hide the <a> by default -->
                                <a class="direction_link" id="aright" href="javascript:void(0)" onclick="setCoordinate(this,'right',400,0,50,50,'In'); toggleDirectionActive(this);"
                                   style=" width:100%; height:100%;">
                                    <img src="/images/icons/right arrow.svg" alt="right to Center"
                                         style=" transform: rotate(180deg);">
                                </a>
                                @* <!-- show the canvas by default -->
                                <canvas onclick="setCoordinate(this,'right',400,0,50,50)"
                                        id="miniCanvas_aright" class="miniCanvas"
                                        width="50" height="50"
                                        style="display: block;"></canvas> *@
                            </div>
                            <div class="clear"></div>
                        </li>

                        <li>
                            <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                                <!-- hide the <a> by default -->
                                <a class="direction_link" id="abottom" href="javascript:void(0)"
                                   onclick="setCoordinate(this,'bottom',800,0,50,50,'In'); toggleDirectionActive(this);"
                                   style=" width:100%; height:100%;">
                                    <img src="/images/icons/right arrow.svg" alt="bottom to Center"
                                         style=" transform: rotate(270deg);">
                                </a>
                                @* <!-- show the canvas by default -->
                                <canvas onclick="setCoordinate(this,'bottom',800,0,50,50)"
                                        id="miniCanvas_abottom" class="miniCanvas"
                                        width="50" height="50"
                                        style="display: block;"></canvas> *@
                            </div>
                            <div class="clear"></div>
                        </li>

                        <li>
                            <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                                <!-- hide the <a> by default -->
                                <a class="direction_link" id="atop" href="javascript:void(0)" onclick="setCoordinate(this,'top',400,0,50,50,'In'); toggleDirectionActive(this);"
                                   style=" width:100%; height:100%;">
                                    <img src="/images/icons/right arrow.svg" alt="top to Center"
                                         style=" transform: rotate(90deg);">
                                </a>
                                @* <!-- show the canvas by default -->
                                <canvas onclick="setCoordinate(this,'top',400,0,50,50)"
                                        id="miniCanvas_atop" class="miniCanvas"
                                        width="50" height="50"
                                        style="display: block;"></canvas> *@
                            </div>
                            <div class="clear"></div>
                        </li>

                    </ul>
                </div>
            </section>
          

            <section id="rauchbier" class="tab-panel">

                <div class="accordion" style=" position: relative;   left: 0px; top: 0; margin-bottom: 26px; width: 100%;">



                    <div class="dropdown mb-3">
                        <a class="dropdown-toggle time_dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Seconds
                        </a> <label id="lblSeconds"></label>
                        <ul class="dropdown-menu" id="ddlSecondsControl">
                            <li><a class="dropdown-item" value="2" onclick="wireSecondsDropdown()">2 Sec</a></li>
                            <li><a class="dropdown-item" value="3" onclick="wireSecondsDropdown()">3 Sec</a></li>
                            <li><a class="dropdown-item" value="4" onclick="wireSecondsDropdown()">4 Sec</a></li>
                            <li><a class="dropdown-item" value="6" onclick="wireSecondsDropdown()">6 Sec</a></li>
                            <li><a class="dropdown-item" value="8" onclick="wireSecondsDropdown()">8 Sec</a></li>
                            <li><a class="dropdown-item" value="10" onclick="wireSecondsDropdown()">10 Sec</a></li>
                        </ul>
                    </div>



                </div>

            </section>





            <section id="dunkles" class="tab-panel">

                <div class="accordion" style=" position: relative;
                                left: 0px;
                                top: 0;
                                width: 100%;">

                    <div class="dropdown mb-4">
                        <a class="dropdown-toggle time_dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Speed
                        </a>
                        <label id="lblOutSpeed"></label>
                        <ul class="dropdown-menu" id="ddlOutSpeedControl">
                            <li><a class="dropdown-item" value="2" onclick="wireOutSpeedDropdown()">2 Sec</a></li>
                            <li><a class="dropdown-item" value="3" onclick="wireOutSpeedDropdown()">3 Sec</a></li>
                            <li><a class="dropdown-item" value="4" onclick="wireOutSpeedDropdown()">4 Sec</a></li>
                            <li><a class="dropdown-item" value="6" onclick="wireOutSpeedDropdown()">6 Sec</a></li>
                            <li><a class="dropdown-item" value="8" onclick="wireOutSpeedDropdown()">8 Sec</a></li>
                            <li><a class="dropdown-item" value="10" onclick="wireOutSpeedDropdown()">10 Sec</a></li>
                        </ul>
                    </div>
                </div>
                <h2>Effects</h2>
                <ul class="right-listone d-flex flex-wrap gap-3 mb-4">
                    @* <li>
                        <a href="javascript:void(0)" onclick="textAnimationClick(this, 'delaylinear')"> <img src="~/images/icons/icon-effict.png" alt="pattren"></a>

                        <div class="clear"></div>
                    </li>
                    <li>
                        <a href="javascript:void(0)"> <img src="~/images/icons/icon-effict.png" alt="pattren"></a>

                        <div class="clear"></div>
                    </li> *@
                    <li>
                        <a href="javascript:void(0)" onclick="textAnimationClick(this, 'delaylinear','Out')" title="linear">Linear</a>
                        <div class="clear"></div>
                    </li>
                  
                    <li title="Effect Disabled (Coming Soon)">
                        <a class="disabled-ani-button" id="ablur" href="javascript:void(0)" title="Zoom in">Zoom</a>
                        <div class="clear"></div>
                    </li>
                    <li title="Effect Disabled (Coming Soon)">
                        <a class="disabled-ani-button" id="ablur" href="javascript:void(0)" title="Cross Fade">Fade</a>
                        <div class="clear"></div>
                    </li>
                    <li title="Effect Disabled (Coming Soon)">
                        <a class="disabled-ani-button" id="ablur" href="javascript:void(0)" title="Type">Type</a>
                        <div class="clear"></div>
                    </li>
                    <li title="Effect Disabled (Coming Soon)">
                        <a class="disabled-ani-button" id="ablur" href="javascript:void(0)">Blur</a>
                        <div class="clear"></div>
                    </li>

                </ul>

                <h2>Out</h2>

                <ul class="right-listone d-flex justify-content-between">
                    @* <li>
                        <a href="javascript:void(0)"> <img src="~/images/icons/icon-lr.png" onclick="setCoordinate(this,'left',100,20,50,50);" alt="pattren"></a>

                        <div class="clear"></div>
                    </li>
                    <li>
                        <a href="javascript:void(0)"> <img src="~/images/icons/icon-rl.png" onclick="setCoordinate(this,'right',400,0,50,50);" alt="text"></a>

                    </li>
                   
                    <li>
                        <a href="javascript:void(0)"> <img src="~/images/icons/icon-bt.png" onclick="setCoordinate(this,'bottom',800,0,50,50);" alt="Masking"></a>

                    </li>
                    <li>
                        <a href="javascript:void(0)"> <img src="~/images/icons/icon-tb.png" onclick="setCoordinate(this,'top',400,0,50,50);" alt="image"></a>

                    </li> *@
                    <li>
                        <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                            <!-- hide the <a> by default -->
                            <a class="direction_link" id="aleft" href="javascript:void(0)" onclick="setCoordinate(this,'right',100,20,50,50,'Out'); toggleDirectionActive(this);"
                               style=" width:100%; height:100%;">
                                <img src="/images/icons/right arrow.svg" alt="Center to Right">
                            </a>
                            
                        </div>
                        <div class="clear"></div>
                    </li>
                    <li>
                        <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                            <!-- hide the <a> by default -->
                            <a class="direction_link" id="aright" href="javascript:void(0)" onclick="setCoordinate(this,'left',400,0,50,50,'Out'); toggleDirectionActive(this);"
                               style=" width:100%; height:100%;">
                                <img src="/images/icons/right arrow.svg" alt="Center to Left"
                                     style=" transform: rotate(180deg);">
                            </a>
                            
                        </div>
                        <div class="clear"></div>
                    </li>

                    <li>
                        <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                            <!-- hide the <a> by default -->
                            <a class="direction_link" id="abottom" href="javascript:void(0)"
                               onclick="setCoordinate(this,'top',800,0,50,50,'Out'); toggleDirectionActive(this);"
                               style=" width:100%; height:100%;">
                                <img src="/images/icons/right arrow.svg" alt="Center to Top"
                                     style=" transform: rotate(270deg);">
                            </a>
                        </div>
                        <div class="clear"></div>
                    </li>

                    <li>
                        <div class="btn-canvas-container" style="width: 40px; height: 40px;">
                            <!-- hide the <a> by default -->
                            <a class="direction_link" id="atop" href="javascript:void(0)" onclick="setCoordinate(this,'bottom',400,0,50,50,'Out'); toggleDirectionActive(this);"
                               style=" width:100%; height:100%;">
                                <img src="/images/icons/right arrow.svg" alt="Center to Bottom"
                                     style=" transform: rotate(90deg);">
                            </a>
                        </div>
                        <div class="clear"></div>
                    </li>

                </ul>
            </section>
            <div id="imageCoordination" style="display:none;">
                <label for="imageStartX">Start X:</label>
                <input type="number" id="imageStartX" value="200" />
                <label for="imageStartY">Start Y:</label>
                <input type="number" id="imageStartY" value="200" />
                <label for="imageEndX">End X:</label>
                <input type="number" id="imageEndX" value="600" />
                <label for="imageEndY">End Y:</label>
                <input type="number" id="imageEndY" value="400" />
            </div>
            <div id="textCoordination" style="display:none;">
                <label for="textStartX">Start X:</label>
                <input type="number" id="textStartX" value="100" />
                <label for="textStartY">Start Y:</label>
                <input type="number" id="textStartY" value="100" />
                <label for="textEndX">End X:</label>
                <input type="number" id="textEndX" value="400" />
                <label for="textEndY">End Y:</label>
                <input type="number" id="textEndY" value="300" />
            </div>
        </div>

    </div>
</div>

<div class="right-sec-two" style="display:none;">
    <div id="text_heading" class="headtext">Text</div>
    @* <div id="image_heading" class="headtext">Image</div>
    <div id="shape_heading" class="headtext">Shape</div> *@

    <div id="text_alignment_tool" class="col-md-12 mb-3">
        <div class="row alignment-img">
            <ul class="d-flex justify-content-between mb-0">
                <li>
                    <a onclick="ChangeAlignStyle('left')"> <img src="~/images/icons/icon-align-left.png" title="Alignleft" alt="Icon-alignleft"></a>
                </li>
                <li>
                    <a onclick="ChangeAlignStyle('center')"> <img src="~/images/icons/icon-align-center.png" title="Aligncenter" alt="Icon-alignleft"></a>
                </li>
                <li>
                    <a onclick="ChangeAlignStyle('right')"> <img src="~/images/icons/icon-align-right.png" title="Alignright" alt="Icon-alignleft"></a>
                </li>

            </ul>
            <input type="hidden" id="textAlign" />
        </div>
    </div>

    <div class="col-md-12 mb-3" style="display:none;">
        <div class="row FontSize">
            <div class="col-md-6 ">
                <label>Size</label>
            </div>
            <div class="col-md-6  text-end">
                <select id="fontSize" onchange="ChangeStyle()">

                    <option value="18">18</option>
                    <option value="20">20</option>
                    <option value="25">25</option>
                    <option value="30">30</option>
                    <option value="35" selected>35</option>
                    <option value="40">40</option>
                    <option value="45">45</option>
                    <option value="50">50</option>
                    <option value="60">60</option>
                </select>
            </div>

        </div>
    </div>
    <div id="text_decoration_tool">
        <button id="boldBtn" onclick="boldText();" class="text_decoration"><i class="fa-solid fa-bold"></i></button>
        <button id="italicBtn" onclick="italicText();" class="text_decoration"><i class="fa-solid fa-italic"></i></button>
        <button class="text_decoration">aA</button>
    </div>
    <div id="text_color_tool" class="col-md-12 mb-3">
        <div class="row FontSize my-4">
            <div class="col-md-6  d-flex align-items-center">
                <label>Text Color</label>
            </div>
            <div class="col-md-6 text-end d-flex align-items-center justify-content-end">
                <div class="color-palette">
                    <input type="hidden" id="hdnTextColor" />
                    <form action="/action_page.php" class="d-flex">
                        <input type="color" id="favcolor" name="favcolor" oninput="ChangeColor()" value="#000000">
                    </form>
                </div>
            </div>

        </div>
    </div>

    <div id="line_spacing_tool" class="line_spacing mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <p class="spacing_title m-0">Line Spacing</p>
            <div class="d-flex justify-content-between spacing_buttons">
                <a class="spacing_button" onclick="changeLineSpacing(-FACTOR_INCREMENT)">-</a>
                <a class="spacing_button" onclick="changeLineSpacing(FACTOR_INCREMENT)">+</a>
            </div>
        </div>
    </div>
    

    <div class="col-md-12 mb-4" id="divFillColor" style="display:none;">
        <div class="row fillcolor">
            <div class="col-md-6 d-flex align-items-center">
                <label>Fill</label>
            </div>
            <div class="col-md-6  d-flex justify-content-end">
                <div id="divfill">
                    <div class="color-palette">
                        <input type="hidden" id="hdnfillColor" />
                        <form action="/action_page.php" class="d-flex">
                            <input type="color" id="favFillcolor" name="favFillcolor" oninput="ChangeFillColor()" value="#42b3f5">
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 mb-4" id="divStrockColor" style="display:none;">
        <div class="row Strock">
            <div class="col-md-6 d-flex align-items-center">
                <label>Stroke</label>
            </div>
            <div class="col-md-6  d-flex justify-content-end">
                <div id="divStrock">
                    <div class="color-palette">
                        <input type="hidden" id="hdnStrockColor" />
                        <form action="/action_page.php" class="d-flex">
                            <input type="color" id="favStrockcolor" name="favStrockcolor" oninput="ChangeStrockColor()" value="#78f542">
                        </form>
                    </div>
                </div>
            </div>

        </div>

    </div>

   
      <div id="group_tool" class="mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <p class="spacing_title m-0">
                Group
            </p>
            <div class="d-flex justify-content-end spacing_buttons">
               @*  <input type="checkbox" id="groupCheckbox" class="checkbox_input" onchange="GroupPropertySet()" /> *@
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="groupCheckbox" onchange="GroupPropertySet()">
                </div>
            </div>
        </div>
    </div>
    <div id="no_animation_tool" class="mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <p class="spacing_title m-0">
                No Animation
            </p>
            <div class="d-flex justify-content-end spacing_buttons">
               @*  <input type="checkbox" id="noAnimCheckbox" class="checkbox_input" onchange="ImagePropertySet()" /> *@
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="noAnimCheckbox" onchange="ImagePropertySet()">
            </div>
            </div>
        </div>
    </div>
    @* opacity slider *@
    <div id="opacity_tool" class="slider-card">
        <div class="d-flex justify-content-between align-items-center mt-4 mb-2">
            <label for="opacitySlider" class="mb-0 fw-semibold slider_label">
                Opacity: <span id="opacityValue">0</span>
            </label>
            <span class="badge"
                  id="opacityBadge"
                  spellcheck="false">0</span>
        </div>
        <input type="range" class="form-range" min="0" max="1" step="0.001" id="opacitySlider">
    </div>
    @* rotation slider *@
    <div id="rotation_tool" class="slider-card">
        <div class="d-flex justify-content-between align-items-center mt-4 mb-2">
            <label for="rotationSlider" class="mb-0 fw-semibold slider_label">
                Rotation: <span id="rotationValue">0</span>
            </label>
            <span class="badge"
                  id="rotationBadge"
                  contenteditable="true"
                  spellcheck="false">0</span>
        </div>
        <input type="range" class="form-range" min="0" max="360" step="1" id="rotationSlider">
    </div>


    @* <div class="col-md-12 mb-2"> *@
    @*     <div class="row Strock-Line my-4"> *@
    @*         <div class="col-md-6 "> *@
    @*             <label>Strock Line</label> *@
    @*         </div> *@
    @*         <div class="col-md-6  text-end"> *@
    @*             <select> *@
    @*                 <option> 1</option> *@
    @*                 <option> 2</option> *@
    @*                 <option> 3</option> *@
    @*                 <option> 4</option> *@
    @*                 <option> 5</option> *@
    @*             </select> *@
    @*         </div> *@

    @*     </div> *@
    @* </div> *@

    @* <div class="col-md-12 mb-3"> *@
    @*     <div class="row opasity"> *@
    @*         <div class="col-md-6 "> *@
    @*             <label>Opacity</label> *@
    @*         </div> *@
    @*         <div class="col-md-6  text-end"> *@
    @*             <label>100%</label> *@
    @*         </div> *@

    @*     </div> *@
    @* </div> *@

</div>


<div id="opengl_popup" class="collapse show-gallery">

    <div class="card-body">


        <div class="panel-left-gallery">
            <div class="d-flex justify-content-between">
                <p class="gallery_head m-0">Templates</p>
                <!-- <div class="tab cross">x</div> -->
                <button class="btn-cross b-radius-6 tab cross"
                        type="button"
                        onclick="opengl()">
                    ✕
                </button>
            </div>
            @* <div class="tabs">
                <div class="tab active" onclick="switchTab(this, 'images')">Images</div>
                <div class="tab" onclick="switchTab(this, 'my-images')">My Images</div>
                <div class="tab" onclick="switchTab(this, 'templates')">Templates</div>


            </div> *@
            
            <div class="">
                <div class="d-flex justify-content-between gap-3">
                    <!-- search box -->
                    <div class="search-box w-50">
                        <input class="left-panel-imput" type="text" placeholder="Search..." />
                    </div>

                </div>
                <!-- dropdown -->
                @* <div class="dropdown my-3"> *@
                @*     <a class="dropdown-toggle shapes_drop gallery_type" *@
                @*        type="button" *@
                @*        data-bs-toggle="dropdown" *@
                @*        aria-expanded="false"> *@
                @*         Shapes *@
                @*     </a> *@
                @*     <ul class="dropdown-menu"> *@
                @*         <li><a class="dropdown-item" href="#">Shape 1</a></li> *@
                @*         <li><a class="dropdown-item" href="#">Shape 2</a></li> *@
                @*         <li><a class="dropdown-item" href="#">Shape 3</a></li> *@
                @*     </ul> *@
                @* </div> *@

                <div class="shapes_tabs my-3 w-100">
                    @* <a href="#">Photo</a>
                    <a href="#">Shapes</a>
                    <a href="#">Icons</a>
                    <a href="#">Patterns</a>
                    <a href="#">Animation</a> *@
                    <div class="d-flex align-items-center">
                        <button class="arrow-btn me-2" onclick="scrollCategories(-150)">
                            <i class="fa-solid fa-less-than"></i>
                        </button>

                        <div id="categoryScroll" class="category-scroll flex-grow-1">
                            <a class="category-item">Banks</a>
                            <a class="category-item">Schools</a>
                            <a class="category-item">Salon</a>
                            <a class="category-item">Hotels</a>
                            <a class="category-item">Corporate</a>
                            <a class="category-item">Retail</a>
                            <a class="category-item">Sports</a>
                            <a class="category-item">Petshop</a>
                        </div>

                        <button class="arrow-btn ms-2" onclick="scrollCategories(150)">
                            <i class="fa-solid fa-greater-than"></i>
                        </button>
                    </div>
                </div>

                @* <div class="gallery">
                    <div class="d-flex flex-wrap inside_wrapper" style="gap: 54px;">
                    <img src="~/images/Gallery-img/man.png" />
                    <img src="~/images/Gallery-img/bag.png" />
                    <img src="~/images/Gallery-img/circle shape1.svg" />
                    <img src="~/images/Gallery-img/shape1.svg" />
                    <img src="~/images/Gallery-img/apple_watch.png" />
                    <img src="~/images/Gallery-img/Square.svg" />
                    <img src="~/images/Gallery-img/rounded square.svg" />
                    <img src="~/images/Gallery-img/rounded rectangle.svg" />
                    <img src="~/images/Gallery-img/rectangle.svg" />
                    <img src="~/images/Gallery-img/abstract.svg" />
                    </div>
                </div> *@
                <div class="temp_gallery">
                    <div class="inside_wrapper temp_inside">
                        <div class="temp-V_H">
                            <div class="h-templates">
                                <img class="h_temp" src="~/images/banner.png" />
                                <img class="h_temp" src="~/images/banner.png" />
                                <img class="h_temp" src="~/images/banner.png" />
                            </div>
                            <div class="v-templates">
                                <img class="v_temp" src="~/images/Vertical-Menuboard.png" />
                                <img class="v_temp" src="~/images/Vertical-Menuboard.png" />
                                <img class="v_temp" src="~/images/Vertical-Menuboard.png" />
                                <img class="v_temp" src="~/images/Vertical-Menuboard.png" />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            

            @* <!-- templates tab -->
            <div id="templates" class="left_content ">
                <!-- serach box -->
                <div class="search-box w-50">
                    <input class="left-panel-imput" type="text" placeholder="Search..." />
                </div>
                <p class="my-3 gallery_type">Templates</p>
                <div class="temp_gallery">
                    <div class="inside_wrapper temp_inside">
                    <img src="~/images/banner.png" />
                    <img src="~/images/banner.png" />
                    <img src="~/images/Vertical-Menuboard.png" />
                    <img src="~/images/Vertical-Menuboard.png" />
                    </div>
                </div>
            </div> *@
            <div class="pagination" style="margin-top: 65px;">
                <span>&lt;</span>
                <span>4</span>
                <span>6</span>
                <span>7</span>
                <span>9</span>
                <span>10</span>
                <span>11</span>
                <span>&gt;</span>
            </div>
        </div>
    </div>
</div>

<div id="fontstyle_popup" class="collapse show-texteditor">
    <div class="card-body">
        <div class="panel-left-fonts">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <p class="gallery_head m-0">Font Family</p>
                <button class="btn-cross b-radius-6 tab cross" type="button" onclick="opentlClose();">✕</button>
            </div>
            <div class="gl-box">
                <div class="col-md-12">
                    <div class="row" style=" margin-left:-30px;">
                        <ul class="TextStyle ms-1 mt-2">
                            <li><a class="arial" onclick="OnChangefontFamily('Arial')">Arial</a></li>
                            <li><a class="anton" onclick="OnChangefontFamily('Anton')">Anton</a></li>
                            <li><a class="bebes" onclick="OnChangefontFamily('BEBES')">BEBES</a></li>
                            <li><a class="monstro" onclick="OnChangefontFamily('monstro')">MONSTRO</a></li>
                            <li><a class="Montserrat" onclick="OnChangefontFamily('Montserrat')">Montserrat</a></li>
                            <li><a class="neto" onclick="OnChangefontFamily('neto')">Neto</a></li>
                            <li><a class="pacifico" onclick="OnChangefontFamily('Pacifico')">Pacifico</a></li>
                            <li><a class="Roboto" onclick="OnChangefontFamily('Roboto')">Roboto</a></li>
                        </ul>
                        <input type="hidden" id="fontFamily" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="background_edit" id="background_popup">
</div>

<div id="elementsPopup" class="elements-popup">
    <div class="d-flex justify-content-between">
        <p class="gallery_head m-0">Elements</p>
        <!-- <div class="tab cross">x</div> -->
        <button 
                class="btn-cross b-radius-6 tab cross"
                onclick="hideElemennts()"
                type="button">
            ✕
        </button>
    </div>
    <div class="d-flex justify-content-between gap-3">
        <!-- search box -->
        <div class="search-box w-50">
            <input class="left-panel-imput" type="text" placeholder="Search..." />
        </div>

    </div>
    <div class="tabs my-3">
        <div class="tab active" onclick="switchTab(this, 'shapes')">Shapes</div>
        <div class="tab" onclick="switchTab(this, 'icons')">Icons</div>
        <div class="tab" onclick="switchTab(this, 'patterns')">Patterns</div>
        <div class="tab" onclick="switchTab(this, 'photos')">Photos</div>
        <div class="tab" onclick="switchTab(this, 'my-images')">My Images</div>
    </div>

    <!-- Shapes tab -->
    <div id="shapes" class="left_content active">
        <div class="gallery">
            <div class="d-flex flex-wrap inside_wrapper" style="gap: 54px;">
                <svg class="shape_svg" width="40" height="10" xmlns="http://www.w3.org/2000/svg">
                    <line x1="5" y1="5" x2="35" y2="5" stroke="black" stroke-width="2" stroke-linecap="round" />
                </svg>
                <svg class="shape_svg" width="40" height="30" xmlns="http://www.w3.org/2000/svg">
                    <rect x="5" y="5" width="30" height="20" stroke="black" stroke-width="2" fill="none" />
                </svg>
                <svg class="shape_svg" width="40" height="40" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="20" cy="20" r="15" stroke="black" stroke-width="2" fill="none" />
                </svg>
                <svg class="shape_svg" width="40" height="35" xmlns="http://www.w3.org/2000/svg">
                    <polygon points="20,5 35,30 5,30" stroke="black" stroke-width="2" fill="none" />
                </svg>
                <svg class="shape_svg" width="40" height="40" xmlns="http://www.w3.org/2000/svg">
                    <polygon points="20,5 35,15 35,30 20,40 5,30 5,15" stroke="black" stroke-width="2" fill="none" />
                </svg>
                <svg class="shape_svg" width="40" height="40" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                    <path d="M12 21s-6.5-5.5-9-9c-1.5-2-1.5-5 1-6.5 2.5-1.5 4.5.5 5.5 1.5 1-1 3-3 5.5-1.5s2.5 4.5 1 6.5c-2.5 3.5-9 9-9 9z"
                          stroke="black" stroke-width="2" fill="none" />
                </svg>
                <img src="~/images/Gallery-img/circle shape1.svg" />
                <img src="~/images/Gallery-img/shape1.svg" />
                <img src="~/images/Gallery-img/Square.svg" />
                <img src="~/images/Gallery-img/rounded square.svg" />
                <img src="~/images/Gallery-img/rounded rectangle.svg" />
                <img src="~/images/Gallery-img/rectangle.svg" />
                <img src="~/images/Gallery-img/abstract.svg" />
            </div>
        </div>
    </div>

    <!-- Icons tab -->
    <div id="icons" class="left_content">
        <div class="gallery">Icons..</div>
    </div>

    <!-- Pattern tab -->
    <div id="patterns" class="left_content">
        <div class="gallery">Patterns..</div>
    </div>

    <!-- Photos tab -->
    <div id="photos" class="left_content">
        <div class="gallery">
            <div class="d-flex flex-wrap inside_wrapper" style="gap: 54px;">
                <img src="~/images/Gallery-img/man.png" />
                <img src="~/images/Gallery-img/bag.png" />
                <img src="~/images/Gallery-img/apple_watch.png" />
            </div>
        </div>
    </div>

    <!-- my images tab -->
    <div id="my-images" class="left_content">

        <!-- file upload -->
        <div class="custom-file-input choose_file w-50">
            <label for="fileUpload">Choose File</label>
            <span id="fileName">No File</span>
            <input type="file" id="fileUpload" onchange="updateFileName()">
        </div>
 
        <p class="my-3 gallery_type">All My Images</p>
        <div class="gallery my_img_gal">
            <div class="d-flex flex-wrap justify-content-between gap-4 inside_wrapper">
                <img src="~/images/Gallery-img/aniboard-logo.png" />
                <img src="~/images/Gallery-img/aniboard-logo-white.png" />
                <img src="~/images/Gallery-img/aniboard-logo-black.png" />
            </div>
        </div>
    </div>
        
</div>