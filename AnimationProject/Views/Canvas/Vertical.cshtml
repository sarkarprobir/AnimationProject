@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@section scripts {
    <script src="~/js/animation_min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <script src="~/js/Vertical.js?v=@Configuration["AppSettings:FilesVersion"]"></script>


    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
       
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/TextPlugin.min.js"></script>
    <style>
            /* ——— CSS ——— */
           .image-box {
      position: absolute;
      box-sizing: border-box;
      /* remove overflow:hidden here so handles show */
      overflow: visible;    
    }

    /* wrap the actual <img> in a clip‐container if you still need hidden overflow on the image */
    .image-box .img-clip {
      width: 100%;
      height: 100%;
      overflow: hidden;    /* clip the image only */
    }

    .image-box .img-clip img {
      width: 100%;
      height: auto;
      display: block;
    }

        .image-box img {
      width: 100%;
      height: auto;          /* preserve aspect ratio */
      display: block;
    }

    /* selection outline */
    .image-box.selected {
      border: 1px solid #2196F3;
    }

    /* drag, rotate, delete handles */
    .image-box .drag-handle,
    .image-box .rotate-handle,
    .image-box .delete-handle {
      position: absolute;
      width: 16px;
      height: 16px;
      background: #2196F3;
      border: 2px solid white;
      border-radius: 4px;
      cursor: pointer;
      z-index: 1000;
    }

    /* position the handles */
    .drag-handle { top: -24px; left: -24px; cursor: move; }
    .rotate-handle { top: -24px; right: -24px; border-radius: 50%; }
    .delete-handle { bottom: -24px; right: -24px; background: red; }

    /* resize handles */
    .image-box .ui-resizable-handle {
      background: #2196F3;
      border: 1px solid #fff;
      width: 8px;
      height: 8px;
      z-index: 10;
    }

        .rotate-line {
            position: absolute;
            width: 1px;
            height: 20px;
            background: #2196F3;
            left: 50%;
            top: -20px;
            margin-left: -0.5px;
        }
    /* base styling for every handle */
    .text-box .ui-resizable-handle {
      width: 10px;
      height: 10px;
      background: #4faaff;
      border: 2px solid white;
      box-sizing: border-box;
      position: absolute;
      z-index: 2;
    }

    /* corner handles (you probably already see these) */
    .text-box .ui-resizable-nw { top: -6px;  left: -6px;  cursor: nw-resize; }
    .text-box .ui-resizable-ne { top: -6px;  right: -6px; cursor: ne-resize; }
    .text-box .ui-resizable-sw { bottom: -6px; left: -6px;  cursor: sw-resize; }
    .text-box .ui-resizable-se { bottom: -6px; right: -6px; cursor: se-resize; }

    /* middle‑of‑edge handles */

    .text-box .ui-resizable-e  { right: -6px;  top: 50%; transform: translateY(-50%); cursor: e-resize; }
    .text-box .ui-resizable-w  { left: -6px;   top: 50%; transform: translateY(-50%); cursor: w-resize; }

        /* .text-box {
            position: absolute;
            min-width: 150px;
            min-height: 60px;
            padding: 5px;
            font-size: 24px;
            border: 1px solid #2196F3;
            outline: none;
            background-color: transparent;
            color: black;
            white-space: pre-wrap;
            word-break: break-word;
            transform-origin: center center;
            box-sizing: border-box;
            overflow-wrap: break-word;
            
        } */

            .custom-ctx-menu {
      position: absolute;
      list-style: none;
      margin: 0;
      padding: 4px 0;
      background: white;
      border: 1px solid #ccc;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
      z-index: 9999;
    }
    .custom-ctx-menu li {
      padding: 6px 12px;
      cursor: pointer;
      white-space: nowrap;
    }
    .custom-ctx-menu li:hover {
      background: #f0f0f0;
    }

               .disable-select {
      user-select: none !important;
    }
       .text-content {
      cursor: text;        /* text‑select cursor (I‑beam) */
    }

        .text-box {
            position: absolute;
            min-width:  0 !important;
                min-height: 0 !important;
           /*  border: 0.5px solid #2196F3 !important; */
            background: white;
            box-sizing: border-box;
            overflow-wrap: break-word;
            background-color: transparent;
                cursor: move;
                     position: absolute;
        }

        .text-content {
            width: 100%;
            height: 100%;
            padding: 5px;
            font-size: 24px;
            color: black;
            white-space: pre-wrap;
            word-break: break-word;
            overflow-wrap:break-word;
            overflow: auto; /* hides overflow */
            outline: none;
             /*    line-height: 1.2;  */  
        }


        .rotate-handle {
            width: 16px;
            height: 16px;
            background: #2196F3;
            border: 2px solid white;
            border-radius: 50%;
            position: absolute;
            top: -28px;
            left: 50%;
            margin-left: -8px;
            cursor: grab;
            z-index: 1000;
        }


            .ui-resizable-ne, .ui-resizable-nw, .ui-resizable-se, .ui-resizable-sw {
        cursor: nwse-resize;
    }

    .ui-resizable-e, .ui-resizable-w {
        cursor: ew-resize;
    }

        /* Universal handle size and color */
        .ui-resizable-handle {
            width: 10px !important;
            height: 10px !important;
            background: #2196F3;
            border: none;
            z-index: 10;
        }

        /* Top-left (perfect) */
        .ui-resizable-nw {
            top: -5px !important;
            left: -5px !important;
        }

        /* Top-right */
        .ui-resizable-ne {
            top: -5px !important;
            right: -5px !important;
        }

        /* Bottom-left */
        .ui-resizable-sw {
            bottom: -5px !important;
            left: -5px !important;
        }

        /* Bottom-right */
        .ui-resizable-se {
            bottom: -5px !important;
            right: -5px !important;
        }

       

        
        .ui-resizable {
            padding: 0 !important; /* This limits the grab area */
        }

        .text-box:focus {
            outline: none !important;
        }
        .drag-handle {
            width: 16px;
            height: 16px;
            position: absolute;
            top: -28px;
            left: -28px;
            background: #2196F3;
            border-radius: 4px;
            cursor: move;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 12px;
        }

        .delete-handle {
            width: 18px;
            height: 18px;
            background: red;
            color: white;
            position: absolute;
            top: -28px;
            right: -28px;
            border-radius: 4px;
            font-size: 12px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .selected {
            border: 3px solid #2196F3 !important; /* Very thin dashed border */
            box-sizing: border-box;
        }
    </style>
    

    <style>
        #canvasContainer {
            position: relative;
            display: inline-block;
            height: 97vh;
        }
        /* Canvas styling */
        #myCanvas {
            background-color: #fff;
            cursor: pointer;
        }
        /* Hidden input for text editing added*/
        #textEditor {
            position: absolute;
            display: none;
            outline: none;
            background: linear-gradient(135deg, #ffffff, #f9f9f9);
            border: 1px solid #ddd;
            border-radius: 6px;
            padding: 6px 10px;
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            font-size: 16px;
            color: #333;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transition: box-shadow 0.3s ease, transform 0.3s ease;
           z-index: 100;
        }

            #textEditor:focus {
                box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
                transform: scale(1.02);
            }
    </style>

    <style>

        input[type="color" i] {
            width: 30px;
            height: 30px;
            padding: 0;
            /* border: none; */
            border-radius: 3px;
        }

        .color-swatch {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: 2px solid transparent;
            cursor: pointer;
            transition: transform 0.2s, border-color 0.2s;
        }

            .color-swatch:hover {
                transform: scale(1.1);
                border-color: #666;
            }

            .color-swatch.selected {
                border-color: #000;
                box-shadow: 0 0 5px rgba(0,0,0,0.3);
            }
        /* Custom context menu styling */
        #contextMenu {
            position: absolute;
            display: none;
            z-index: 1000;
            background-color: #fff;
            border: 1px solid #ccc;
            box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
            padding: 5px;
            border-radius: 4px;
        }

            #contextMenu ul {
                list-style: none;
                margin: 0;
                padding: 0;
            }

            #contextMenu li {
                padding: 5px 10px;
                cursor: pointer;
                border-radius: 3px;
            }

            #contextMenu li:hover {
                background-color: #eee;
            }

        .dropdown-toggle {
            text-decoration: none;
            color: #777b7c;
        }

        .dropdown-menu.show {
            background: #fff;
            border-radius: 3px;
            border: 0px;
            height: auto !important;
            width: 210px;
            -webkit-box-shadow: 0px 0px 7px #c1bbbb;
            box-shadow: 0px 0px 7px #c1bbbb;
            overflow: hidden !important;
        }

        .dropdown {
            color: #000000 !important;
        }

            .dropdown:hover {
                color: #212529 !important;
            }

        .dropdown-item {
            color: #212529 !important;
        }

            .dropdown-item:hover {
                color: #fff !important;
                background-color: #6214fe !important;
            }



        /* gallery styles */

        :root {
            --font-mont: "Montserrat", sans-serif;
            --font-nunito: "Nunito Sans", sans-serif;
            --color-white: #fff;
            --color-blue: #6214fe;
            --color-muted-grey: #777b7c;
            --color-border-grey: #00000036;
        }

        body {
            font-family: var(--font-nunito);
            margin: 0;
            padding: 0;
            font-size: 1rem;
        }

        .panel-left-gallery {
            width: 500px;
            height: 100vh;
            background: var(--color-white);
            /* z-index: 9; */
            padding: 25px 30px;
            position: absolute;
            left: 0px;
            top: 10px;
        }

        .tabs {
            display: flex;
            justify-content: space-between;
            /* width: 47%; */
        }

        .tab {
            padding: 3px 7px;
            cursor: pointer;
            font-weight: 600;
            font-size: 14px;
            border: 1px solid transparent;
            border-radius: 3px !important;
        }

            .tab:hover {
                border: 1px solid #08080836;
                border-radius: 5px;
            }



        .cross:hover {
            color: red;
        }

        .tab.active {
            background: var(--color-blue);
            color: var(--color-white);
            border-radius: 3px;
        }

        .left_content {
            display: none;
        }

            .left_content.active {
                display: block;
            }

        .search-box {
            display: flex;
        }

            .search-box input {
                flex: 1;
                padding: 3px 5px;
            }

        .gallery {
            display: flex;
            flex-wrap: wrap;
            margin-top: 10px;
            min-height: 432px;
        }

        .my_img_gal {
            min-height: 430.7px;
        }

        .gallery img {
            width: 110px;
            height: 110px;
            object-fit: contain;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 24px;
        }

            .pagination span {
                margin: 0 9px;
                cursor: pointer;
                font-size: 14px;
                right-listone
            }

        .shapes_drop {
            text-decoration: none;
            color: var(--color-muted-grey);
        }

        /* .shapes_tabs a {
            font-size: 14px;
            text-decoration: none;
            color: black;
        } */

        .left-panel-imput {
            flex: 1;
            padding: 5px;
            border-radius: 5px;
            border-color: #00000036;
        }

        .search-box{
            margin-top: 15px;
        }

        .file_upload {
            border-radius: 5px !important;
        }

        .temp_gallery {
            /* display: flex;
            gap: 8px;
            flex-wrap: wrap; */
            overflow-y: hidden;
            min-height: 432px;
        }

            /* .temp_gallery img {
                width: auto;
                height: 147px;
            } */

        .gallery_head {
            font-size: 18px;
            font-weight: 700;
        }

        .gallery_type {
            font-size: 15px;
        }
        /* file upload css */
        .custom-file-input {
            display: flex;
            align-items: center;
            opacity: unset !important;
            border-radius: 5px;
            overflow: hidden;
            border: 2px solid #00000036 !important;
            font-family: Arial, sans-serif;
        }

            .custom-file-input label {
                background-color: #e6f4ea;
                padding: 5px;
                cursor: pointer;
                font-size: 14px;
                font-weight: bold;
                color: #333;
                margin-bottom: 0 !important;
            }

            .custom-file-input span {
                flex: 1;
                padding: 5px;
                font-size: 14px;
                color: #888;
                background-color: #f9f9f9;
            }

            .custom-file-input input {
                display: none;
            }
        /* background image upload */
        #background_popup {
            display: none;
            width: 254px;
            height: 100%;
            background-color: #fff;
            padding: 20px;
            position: absolute;
            top: 3px;
            left: 0;
        }

        #close_button {
            border: 0px solid #ddd;
            float: right;
            background: transparent;
            font-weight: bold;
            font-size: 15px;
            border-radius: 3px;
            padding-top: 2.3px;
        }

        .back_label {
            font-size: 15px;
        }

        .background_edit {
            font-family: "Nunito Sans", sans-serif;
            font-size: 15px;
        }

        .texture_img {
            width: 75px;
            height: 75px;
        }

        .texture_images {
            min-height: 469px;
        }

        .texture_palette {
            width: 30px;
            height: 30px;
            padding: 0;
            border: 2px solid #000000 !important;
            border-radius: 7px;
            overflow: hidden;
        }

            .texture_palette img {
                width: 30px;
                height: 30px;
            }

        #texture_box {
            display: block;
        }



        /* play modal */

        .play_modal_body .modal-content {
            border-radius: 10px;
            width: 411px !important;
            height: 704px !important;
            transform: translate(295px, -180px);
        }

        .play_modal_body .modal-body img {
            width: 100%;
        }

        .modal-open .modal {
            overflow-y: hidden !important;
        }

        .play_modal_body .modal.show .modal-dialog {
            max-width: 1000px !important;
        }

        .play_modal_btn {
            position: absolute;
            top: -16px;
            right: -16px;
            background-color: #ff0000 !important;
            opacity: 1 !important;
            border-radius: 100% !important;
            padding: 7px !important;
            color: #fff !important;
        }

        .menuboard-vertical-thum .active {
            border: 2px solid #0000ff80;
        }

        .miniCanvas {
            border-radius: 5px;
            width: 40px;
            height: 40px;
        }

            .miniCanvas:hover {
                border: 2px solid #ccc;
            }


        .miniCanvas_active {
            border: 2px solid #ccc;
        }
        /* all time deropdown */
        .time_dropdown {
            font-size: 14.8px !important;
            font-weight: 400 !important;
            color: #212529;
        }
        /* canvas size */
        .vertical_canvas{
            width: 32%;
            aspect-ratio: 9/16;
        }

        .inside_wrapper{
            height: fit-content !important;
            display: flex;
            justify-content: center;
        }

        .context-options{
            text-align: left;
            font-size: 14px;
            font-family: "Nunito", sans-serif;
        }
        /* toggle button css */
        .toggle-container {
            display: inline-flex;
            background-color: #fff;
            padding: 4px;
            border-radius: 3px;
        }

        .toggle-btn {
            padding: 7px 16px;
            font-size: 14px;
            font-family: var(--font-nunito);
            font-weight: 400;
            color: #000;
            background-color: #fff;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            width: 101px;
        }

            .toggle-btn.active {
                background-color: black;
                color: white;
            }

    </style>
<script>
                    $(document).ready(function(){
          (async () => {
            try {
                    const savedHtml = sessionStorage.getItem("leftPanelHtml");
            let leftPanelPromise;
            if (savedHtml) {
              document.getElementById("divpanelleft").innerHTML = savedHtml;
              sessionStorage.removeItem("leftPanelHtml"); // optional cleanup
              leftPanelPromise = Promise.resolve(); // no async work needed
            } else {
              // Make sure CreateLeftSectionhtml returns a Promise
              leftPanelPromise = CreateLeftSectionhtml();
            }
              // 1) Load all four panels in parallel
              await Promise.all([
                  leftPanelPromise,
                CreateRightSectionhtml(),
                CreateHeaderSectionhtml(),
                CreateBackgroundSectionhtml()
                //CreateLeftSectionhtml()

              ]);

                
              await document.fonts.ready;

              // 3) Now your controls can be initialized
              $("#hdnlLoopControl").val(1);
              $("#hdnfillColor").val('#42b3f5');
              $("#hdnStrockColor").val('#78f542');
             // document.getElementById("modeButton").innerText = "Graphic Mode";

              // 4) Pull the `id` from the URL and initialize your canvas
              const params = new URLSearchParams(window.location.search);
              const id     = params.get('id');
              if (id) {
                GetDesignBoardById(id);

                // Wire up your custom context‑menu
                const canvas      = document.getElementById("myCanvas");
                const contextMenu = document.getElementById("contextMenu");
                canvas.addEventListener("contextmenu", e => {
                  e.preventDefault();
                  const rect    = canvas.getBoundingClientRect();
                  const offsetX = e.clientX - rect.left;
                  const offsetY = e.clientY - rect.top;

                  const found = getObjectAtcontextmenu(offsetX, offsetY);
                  if (found) {
                    const adjustX = 280, adjustY = 64;
                    selectedForContextMenu = found.obj;
                    selectedType           = found.type;
                    contextMenu.style.left    = (offsetX + adjustX) + "px";
                    contextMenu.style.top     = (offsetY + adjustY) + "px";
                    contextMenu.style.display = "block";
                  } else {
                    contextMenu.style.display = "none";
                  }
                });
              }

              // 5) Optionally auto‑open the modal
              if (params.get('openModal') === 'true') {
                const modalEl = document.getElementById('exampleModal');
                new bootstrap.Modal(modalEl).show();
              }
            }
            catch (err) {
              console.error("Initialization failed:", err);
              // fallback: at least try to draw board even if fonts or panels didn't load
              const fallbackId = new URLSearchParams(window.location.search).get('id');
              if (fallbackId) GetDesignBoardById(fallbackId);
            }
          })();
        });
         const buttons = document.querySelectorAll('.toggle-btn');

        buttons.forEach(button => {
          button.addEventListener('click', () => {
            buttons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
          });
        });
        </script>

    <link href="https://fonts.googleapis.com/css2?family=Lobster&family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
    <link href="~/css/animate/animate.min.css" rel="stylesheet">
    <link href="~/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link href="~/css/style.css" rel="stylesheet">
    <link href="~/css/canvas.css" rel="stylesheet">
    <link href="~/css/responsive.css" rel="stylesheet">
    <script src='https://code.jquery.com/jquery-3.2.1.slim.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js'></script>
    <script src="~/js/wow.min.js"></script>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" rel="stylesheet">
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

    <script>
        function opengl()
         {
         // document.getElementById("modeButton").innerText = "Graphic Mode";
          $("#opengl_popup").toggle();

          if(document.getElementById("fontstyle_popup").style.display == "block"){
                $("#fontstyle_popup").hide();
                $(".right-sec-two").toggle();
                $(".right-sec-one").toggle();
          }
          if(document.getElementById("elementsPopup").style.display == "block"){
              $("#elementsPopup").hide();
          }
         }
    </script>

    <script>
            function toggleMode() {
           // let button = document.getElementById("modeButton");

            // Toggle visibility of elements
            if (document.getElementById("opengl_popup").style.display == "block") {
                $("#opengl_popup").hide();
            }
            $("#fontstyle_popup").toggle();
            $(".right-sec-two").toggle();
            $(".right-sec-one").toggle();

            // Toggle button text between "Animation Mode" and "Graphic Mode"
            if (button.innerText === "Animation Mode") {
                button.innerText = "Graphic Mode";
            } else {
                button.innerText = "Animation Mode";
            }
        }
        function opentl()
         {
            // document.getElementById("modeButton").innerText = "Animation Mode";
            if(document.getElementById("opengl_popup").style.display == "block"){
                $("#opengl_popup").hide();
            }
          $("#fontstyle_popup").toggle();
          $(".right-sec-two").toggle();
          $(".right-sec-one").toggle();
         }
          function opentlClose()
         {
             const animationBtn = document.querySelector('.toggle-btn[data-mode="animation"]')
             const graphicBtn = document.querySelector('.toggle-btn[data-mode="graphic"]')
             animationBtn.classList.add('active');
             graphicBtn.classList.remove('active');
             //document.getElementById("modeButton").innerText = "Graphic Mode";
            if(document.getElementById("opengl_popup").style.display == "block"){
                $("#opengl_popup").hide();
            }
            $("#fontstyle_popup").toggle();
            $(".right-sec-two").toggle();
            $(".right-sec-one").toggle();

         }


            // tab open
            function switchTab(tabElement, tabName) {
            console.log("Arghadeep");  // Debugging log

            let tabs = document.querySelectorAll(".tab");
            let contents = document.querySelectorAll(".left_content");

            // Remove active class from all tabs
            tabs.forEach((tab) => tab.classList.remove("active"));

            // Add active class to clicked tab
            tabElement.classList.add("active");

            // Hide all content sections
            contents.forEach((content) => content.classList.remove("active"));

            // Show the selected tab's content
            document.getElementById(tabName).classList.add("active");
        }
        // file upload js
        function updateFileName() {
            const fileInput = document.getElementById('fileUpload');
            const fileName = document.getElementById('fileName');

            if (fileInput.files.length > 0) {
                fileName.textContent = fileInput.files[0].name;
            } else {
                fileName.textContent = 'No File';
            }
        }


        // show the popup when the pattern icon is clicked
        $(document).on('click', '#toggle_img', function(e) {
          e.preventDefault();
          CreateBackgroundSectionhtml();
          $('#background_popup').show();
          $('#fontstyle_popup').hide();
          $('#opengl_popup').hide();
          $('#elementsPopup').hide();
        });

        // hide the popup when the close button is clicked
        $(document).on('click', '#close_button', function(e) {
          e.preventDefault();
          $('#background_popup').hide();
        });

        // texture popuo show
        document.querySelectorAll(".texture_palette").forEach(element => {
            element.addEventListener("click", function() {
                let box = document.getElementById("texture_box");
                box.style.display = (box.style.display === "none" || box.style.display === "") ? "block" : "none";
            });
        });

        // nav item active function
        function handleNavButtonClick(clickedElement) {
            document.querySelectorAll('.nav_button').forEach(btn => {
                btn.classList.remove('active_nav_button');
            });
            clickedElement.classList.add('active_nav_button');
        }

    </script>
    <!-- JavaScript for Handling Selection and Redirection -->
    <script>
        let selectedOption = ""; // Variable to store the selected board type

        document.getElementById("horizontal-option").addEventListener("click", function () {
            selectedOption = "horizontal";
            highlightSelection("horizontal-option");
        });

        document.getElementById("vertical-option").addEventListener("click", function () {
            selectedOption = "vertical";
            highlightSelection("vertical-option");
        });

        document.getElementById("create-button").addEventListener("click", function () {
            if (selectedOption === "horizontal") {
                window.location.href = "/Canvas/HorizontalIndex"; // Redirect to horizontal page
            } else if (selectedOption === "vertical") {
                window.location.href = "/Canvas/Vertical"; // Redirect to vertical page
            } else {
                // alert("Please select an option before proceeding!");
                MessageShow('', 'Please select an option before proceeding!', 'error');
            }
        });

        // Function to highlight selected option
        function highlightSelection(selectedId) {
            document.getElementById("horizontal-option").classList.remove("selected");
            document.getElementById("vertical-option").classList.remove("selected");
            document.getElementById(selectedId).classList.add("selected");
        }

        document.addEventListener('DOMContentLoaded', function () {
          document.querySelectorAll('.panel-vertical-scroll .menuboard-vertical-thum')
            .forEach(item => {
              item.addEventListener('click', function () {
                this.classList.toggle('active');
              });
            });
        });


        const elements = document.querySelectorAll('.miniCanvas');

        elements.forEach(element => {
          element.addEventListener('click', () => {
            // Remove 'active' class from all elements
            elements.forEach(el => el.classList.remove('miniCanvas_active'));

            // Add 'active' to the clicked element
            element.classList.add('miniCanvas_active');
          });
        });
    </script>


    <script>
        (function () {
          const div       = document.getElementById('myCanvas');
          const container = document.getElementById('canvasContainer');
          const dpr       = window.devicePixelRatio || 1;

          let DESIGN_W, DESIGN_H;
          let scaleX = 1, scaleY = 1;
          let firstRun = true;

          function resizeDiv() {
            if (!div || !container) return;

            const containerW = container.clientWidth;
            const cssW = containerW * 0.34;
            const cssH = cssW * (16 / 9);

            div.style.width = cssW + 'px';
            div.style.height = cssH + 'px';

            const screenW = cssW;
            const screenH = cssH;

            if (firstRun) {
              DESIGN_W = screenW;
              DESIGN_H = screenH;
              firstRun = false;
              console.log(`Captured design size: ${DESIGN_W}×${DESIGN_H}`);
            }

            scaleX = screenW / DESIGN_W;
            scaleY = screenH / DESIGN_H;

            // Optionally apply transform scale if you’re positioning content inside the div
            div.style.transformOrigin = "top left";
            div.style.transform = `scale(${scaleX}, ${scaleY})`;
          }

          window.resizeDiv = resizeDiv;
          window.addEventListener('resize', resizeDiv);
          window.addEventListener('DOMContentLoaded', resizeDiv);
        })();

    </script>
        }
<div class="text-center" style="position:relative">
    <nav class="navbar bg-dark-topnav navbar-expand-lg fixed-top">
        <div class="container-fluid p-r-0" style="justify-content: center !important;">
            <div class="row" id="divHeaderSection">
            </div>
        </div>
    </nav>
    <!-- Modal Structure -->
    <div class="modal fade layout_modal" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content p-3">
                <div class="modal-header">
                    <h5 class="modal-title" id="aniBoardModalLabel">New AniBoard</h5>
                </div>

                <div class="modal-body">
                    <!-- Vertical Option -->
                    <div class="option-box d-flex justify-content-between align-items-center mb-2" id="vertical-option">
                        <div class="d-flex align-items-center">
                            <div class="portrait-icon"></div>
                            <span class="vertical_option">Vertical / Portrait</span>
                        </div>
                        <span>1080x1920</span>
                    </div>

                    <!-- Horizontal Option -->
                    <div class="option-box d-flex justify-content-between align-items-center" id="horizontal-option">
                        <div class="d-flex align-items-center">
                            <div class="landscape-icon"></div>
                            <span>Horizontal / Landscape</span>
                        </div>
                        <span>1920x1080</span>
                    </div>


                </div>

                <div class="modal-footer pt-0">
                    <button type="button" class="cancel-btn" data-bs-dismiss="modal">Cancel</button>
                    <button class="create-btn" id="create-button">Create</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Structure -->
    <div class="modal fade layout_modal" id="downloadModal" tabindex="-1" aria-labelledby="downloadModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content downloadModal-content p-3">
                <div class="modal-header">
                    <h5 class="modal-title" id="aniBoardModalLabel">Link</h5>
                    <button type="button" class="btn-cross b-radius-6 tab cross download-cross_btn" data-bs-dismiss="modal">x</button>
                </div>

                <div class="modal-body text-start">
                    <p class="fileName"> File : Sunday Adboard v01</p>
                    <div class="fileLink">
                        <span class="aniLink">https://aniboard.com/v20560</span>
                        <button class="copy-link-btn ms-2" onclick="copyLink(this)"><i class="fa-regular fa-copy"></i></button>
                    </div>

                </div>

                @* <div class="modal-footer pt-0">
                    <button type="button" class="cancel-btn" data-bs-dismiss="modal">Cancel</button>
                    <button class="create-btn" id="create-button">Create</button>
                </div> *@
            </div>
        </div>
    </div>


    <div class="d-flex align-items-stretch  main-canvas-content">

        <div class="panel-left " id="divpanelleft">
        </div>

        <div class="panel-middle d-flex align-items-center justify-content-center" id="canvasContainer">
            <div id="controls" style="margin-bottom: 10px;">
                @* <button id="Animate" onclick="Animate()">Add Text Box</button>   *@
                <button id="Animate1" onclick="Animate()">A1</button>
                <button id="Animate2" onclick="Animate1()">A2</button>
                <button id="Animate3" onclick="Animate2()">A3</button>
                @* <label>
                    Font Size:
                    <input type="number" id="fontSize" value="24" style="width: 60px;" />
                </label> *@
                @*  <label>
                    Text Color:
                    <input type="color" id="textColor1" value="#000000" />
                </label>  *@
                <label>
                    Font Family:
                    <select id="fontFamily">
                        <option value="Arial">Arial</option>
                        <option value="Poppins">Poppins</option>
                        <option value="Georgia">Georgia</option>
                        <option value="Courier New">Courier New</option>
                    </select>
                </label>
                <button class="toggle" id="boldBtn"><b>B</b></button>
                <button class="toggle" id="italicBtn"><em>I</em></button>
                <button class="toggle" id="underlineBtn"><u>U</u></button>
                <button class="toggle" id="caseToggleBtn">Aa</button>
                <button class="toggle" id="alignBtn"><i class="fas fa-align-left"></i></button>

                @* <label>
                    Line Height:
                    <input type="number" id="lineHeight" step="0.1" value="1.2" style="width: 60px;" />
                </label> *@
            </div>


            @* <canvas id="myCanvas" class="clsmyCanvas"></canvas> *@
            <div id="myCanvas" class="clsmyCanvas"></div>
            <!-- Custom context menu for deletion -->
            <div id="contextMenu">
                <ul>
                    <li class="context-options" id="copyOption">Copy</li>
                    <li class="context-options" id="pasteOption">Paste</li>
                    <li class="context-options" id="duplicateOption">Duplicate</li>
                    <li class="context-options" id="bringFrontOption">Bring Front</li>
                    <li class="context-options" id="sendBackOption">Send Back</li>
                    <li class="context-options" id="deleteOption">Delete</l>
                </ul>
            </div>
            <p class="middle-resulation">Final Output 1080x1920</p>
            <textarea wrap="hard" style="display:none;" id="textEditor"></textarea>
        </div>
        <div class="canvas-top-btn" style="display:block">

            <div class="toggle-container">
                <button class="toggle-btn" data-mode="graphic">Graphic</button>
                <button class="toggle-btn active" data-mode="animation">Animation</button>
            </div>

        </div>
        <div class="panel-right content" id="divpanelright">
        </div>
    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // add custom function
    function rgbToHex(rgb) {
      const result = /^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/.exec(rgb);
      return result
        ? "#" +
            ("0" + parseInt(result[1]).toString(16)).slice(-2) +
            ("0" + parseInt(result[2]).toString(16)).slice(-2) +
            ("0" + parseInt(result[3]).toString(16)).slice(-2)
        : rgb;
    }
    // Auto-resize height as user types or applies styles
    $(document).on('input', '.text-box', function () {
      this.style.height = 'auto'; // reset height
      this.style.height = this.scrollHeight + 'px'; // fit content
    });

</script>
